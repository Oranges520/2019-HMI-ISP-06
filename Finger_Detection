import numpy as np
import cv2
import imutils
import time
import os
from keras.models import load_model
import tensorflow as tf

os.environ["CUDA_VISIBLE_DEVICES"] = "-1"

# initialize the video stream and allow the camera sensor to warm up
print('[INFO] camera sensor warming up...')
cap=cv2.VideoCapture(0)
time.sleep(2.0)

def loadmodel():
    print('start loading model')
    global model
    model_dir = 'finger_detection_model.h5'
    if os.path.exists(model_dir):
        print('yes it is')
        model = load_model(model_dir)
    else:
        print('it doesnt')
    global graph
    graph = tf.get_default_graph()

loadmodel()

while (True):
    success,img_read=cap.read(0)
    img_gray=cv2.cvtColor(img_read,cv2.COLOR_BGR2GRAY)
    img_gray = cv2.resize(img_gray, (128, 128))

    predict_mat = []
    predict_mat.append(img_gray)
    predict_mat = np.array(predict_mat)
    predict_mat = predict_mat.reshape(1, 128, 128, 1)
    with graph.as_default():
        preds = model.predict(predict_mat, steps=1)
        predicted_class_indices = np.argmax(preds, axis=1)
        prediction = predicted_class_indices[0]

    cv2.putText(img_read, "number: {:d}".format(prediction), (100, 30),
                cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 255), 2)
